<?php

namespace App\Http\Controllers\Admin;

use App\{{model}};
use Laracasts\Flash\Flash;
use Illuminate\Http\Request;
use Nissi\Traits\SanitizesInput;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Redirect;

class {{controller}} extends Controller
{
    use SanitizesInput;

    /**
     * Display a listing of the {{resources}}.
     */
    public function index()
    {
        $heading = '{{heading}}';

        // Start Query Builder
        $query = {{model}}::query();

        if ($searchTerms = request('q')) {
            $query = $query->search($searchTerms);
        }

        ${{collection}} = $query->paginate(20);

        $searchable = false;
        $creatable  = false;
        $exportable = false;

        $createUrl = $creatable ? route('{{routeName}}.create') : '';
        $exportUrl = $exportable ? route('{{routeName}}.export') : '';

        return view('{{routeName}}.index', compact('{{collection}}', 'heading', 'createUrl', 'exportUrl', 'searchable', 'creatable', 'exportable'));
    }

    /**
     * Show the form for creating a new {{resource}}.
     */
    public function create()
    {
        ${{object}} = new {{model}}();

        return view('{{routeName}}.create', compact('{{object}}'));
    }

    /**
     * Store a newly created {{resource}} in storage.
     */
    public function store(Request $request)
    {
        $this->validate($request, $this->rules());

        $data = $this->sanitizeInput($request->all());

        ${{object}} = {{model}}::create($data);

        Flash::success('The {{resource}} was created.');

        if ($request->has('view') && $request->view == 'modal') {
            return view('admin.success');
        }

        return Redirect::route('{{routeName}}.index');
    }

    /**
     * Display the specified {{resource}}.
     */
    public function show({{model}} ${{object}})
    {
        return view('{{routeName}}.show', compact('{{object}}'));
    }

    /**
     * Show the form for editing the specified {{resource}}.
     */
    public function edit({{model}} ${{object}})
    {
        return view('{{routeName}}.edit', compact('{{object}}'));
    }

    /**
     * Update the specified {{resource}} in storage.
     */
    public function update(Request $request, {{model}} ${{object}})
    {
        $this->validate($request, $this->rules());

        $data = $this->sanitizeInput($request->all());

        ${{object}}->update($data);

        Flash::success('The {{resource}} has been updated.');

        if ($request->has('view') && $request->view == 'modal') {
            return view('admin.success');
        }

        return Redirect::route('{{routeName}}.index');
    }

    /**
     * Remove the specified {{resource}} from storage.
     */
    public function destroy(Request $request, {{model}} ${{object}})
    {
        ${{object}}->delete();

        Flash::success('The {{resource}} has been deleted.');

        if ($request->has('view') && $request->view == 'modal') {
            return view('admin.success');
        }

        return Redirect::route('{{routeName}}.index');
    }

    /**
     * Form validation rules for this resource.
     */
    protected function rules()
    {
        return [];
    }
}
